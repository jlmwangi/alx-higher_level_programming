Import function from module:
	>>> add_integer = __import__("0-add_integer").add_integer

check for module docstring:
	>>> m = __import__("0-add_integer").__doc__
	>>> len(m) > 1
	True

check for function docstring:
	>>> f = __import__("0-add_integer").add_integer.__doc__
	>>> len(f) > 1
	True

check no args:
	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: misssing required positional arguments

check one arg:
	>>> add_integer(3)
	Traceback (most recent call last):
	...
	TypeError: missing one positional argument

check more than two args:
	>>> add_integer(2, 3, 4)
	Traceback (most recent call last):
	...
	TypeError: number of arguments exceed the required number

check positive integers:
	>>> add_integer(1, 4)
	5

check positive and negative integers:
	>>> add_integer(2, -3)
	-1

check negative and positive integers:
	>>> add_integer(-4, 1)
	-3

check int and float:
	>>> add_integer(2, 4.1)
	6

check float and int:
	>>> add_integer(3.7, 2)
	5

check float and float:
	>>> add_integer(2.3, 3.6)
	5

check int with non-number:
	>>> add_integer(2, [4])
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

check non-number with int:
	>>> add_integer("3", 1)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

check non-number with non-number:
	>>> add_integer("3", "2")
	Traceback (most recent call last):
	...
	TypeError: a must ba an integer
